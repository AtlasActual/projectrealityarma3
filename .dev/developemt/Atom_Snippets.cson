'.source.sqf':
# Logging Snipets
    'CLib_Log':
        'prefix': 'Log'
        'body': 'LOG($1)'
    'CLib_Dump':
        'prefix': 'Dump'
        'body': 'DUMP($1)'

# PerFrame Snipets
    'CLib_addPFH':
        'prefix': 'addPFH'
        'body': '[{$1\n    \n}, ${2:0}] call CFUNC(addPerFrameHandler);'
    'CLib_removePFH':
        'prefix': 'removePFH'
        'body': '$1 call CFUNC(removePerFrameHandler);'
    'CLib_execNextF':
        'prefix': 'execNextF'
        'body': '[{$1\n    \n}] call CFUNC(execNextFrame);'
    'CLib_wait':
        'prefix': 'wait'
        'body': '[{$1\n    \n}, ${2:1}] call CFUNC(wait);'
    'CLib_waitunitl':
        'prefix': 'waitUntil'
        'body': '[{$1\n    \n}, {$2\n    \n}] call CFUNC(waitUntil);'

# Event Snipets
    'CLib_addEvent':
        'prefix': 'addEvent'
        'body': '["${1:EVENT}", {$2\n    \n}] call CFUNC(addEventhandler);'
    'CLib_localEvent':
        'prefix': 'localEvent'
        'body': '["${1:EVENT}", ${2:ARGUMENTS}] call CFUNC(localEvent);'
    'CLib_targetEvent':
        'prefix': 'targetEvent'
        'body': '["${1:EVENT}", ${2:TARGETS}, ${3:ARGUMENTS}] call CFUNC(targetEvent);'
    'CLib_serverEvent':
        'prefix': 'serverEvent'
        'body': '["${1:EVENT}", ${2:ARGUMENTS}] call CFUNC(serverEvent);'
    'CLib_globalEvent':
        'prefix': 'globalEvent'
        'body': '["${1:EVENT}", ${2:ARGUMENTS}] call CFUNC(globalEvent);'

# Namespace
    'CLib_allVariables':
        'prefix': 'allVariables'
        'body': '[${1:NAMESPACE},"${2:VARIABLENAME}"] call CFUNC(allVariables);'
    'CLib_setVariableNamespace':
        'prefix': 'setVariableNamespace'
        'body': '[${1:NAMESPACE}, "${2:VARIABLENAME}", ${3:VALUE},"${4:CACHENAME}", ${5:GLOBAL}] call CFUNC(setVariable);'
    'CLib_getVariableNamespace':
        'prefix': 'getVariableNamespace'
        'body': '[${1:NAMESPACE}, ${2:VARIABLENAME}, ${3:DEFAULT}] call CFUNC(getVariable);'
    'CLib_createNamespace':
        'prefix': 'createNamespace'
        'body': '${1:false} call CFUNC(createNamespace);'
    'CLib_deleteNamespace':
        'prefix': 'deleteNamespace'
        'body': '${1:NAMESPACE} call CFUNC(deleteNamespace);'

# Mutex
    'CLib_mutex':
        'prefix': 'mutex'
        'body': '[${1:CODE}, ${2:ARGUMENTS}, ${3:MUTEXID}] call CFUNC(mutex);'

# Misc Snipets
    'PRA3_ShowNotification':
        'prefix': 'notification'
        'body': '["${1:TEXT}", ${2:COLOR},${3:TIME},${4:PRIORITY},${5:CONDITION}] call EFUNC(Common,displayNotification);'
    'CLib_Player':
        'prefix': 'player'
        'body': 'CLib_player'
    'CLib_Header':
        'prefix': 'CLib_Header'
        'body': '#include "macros.hpp"\n/*\n    Community Lib - CLib\n    \n    Author: joko // Jonas\n    \n    Description:\n    ${2:Description}\n    \n    Parameter(s):\n    0: ${3:Argument} <${4:Type}>\n    \n    Returns:\n    0: ${5:Return} <${6:Type}>\n*/'

# ToDo: MapGrahics
